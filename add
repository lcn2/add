#!/usr/bin/env bash
#
# add - add a column (field) of numbers
#
# Copyright (c) 1999,2014-2015,2023,2025 by Landon Curt Noll.  All Rights Reserved.
#
# Permission to use, copy, modify, and distribute this software and
# its documentation for any purpose and without fee is hereby granted,
# provided that the above copyright, this permission notice and text
# this comment, and the disclaimer below appear in all of the following:
#
#       supporting documentation
#       source copies
#       source works derived from this source
#       binaries derived from this source or from derived source
#
# LANDON CURT NOLL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO
# EVENT SHALL LANDON CURT NOLL BE LIABLE FOR ANY SPECIAL, INDIRECT OR
# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF
#
# chongo (Landon Curt Noll) /\oo/\
#
# http://www.isthe.com/chongo/index.html
# https://github.com/lcn2
#
# Share and enjoy!  :-)


# setup
#
export VERSION="1.3.1 2025-04-11"
NAME=$(basename "$0")
export NAME


# usage
#
export USAGE="usage: $0 [-h] [-V] [field]

    -h          print help message and exit
    -V          print version string and exit

    [field]	field number to add (def: add field 1)

Exit codes:
     0         all OK
     2         -h and help string printed or -V and version string printed
     3         command line error
 >= 10         internal error

$NAME version: $VERSION"


# parse command line
#
while getopts :hV flag; do
  case "$flag" in
    h) echo "$USAGE"
        exit 2
        ;;
    V) echo "$VERSION"
        exit 2
        ;;
    \?) echo "$0: ERROR: invalid option: -$OPTARG" 1>&2
        echo 1>&2
        echo "$USAGE" 1>&2
        exit 3
        ;;
    :) echo "$0: ERROR: option -$OPTARG requires an argument" 1>&2
        echo 1>&2
        echo "$USAGE" 1>&2
        exit 3
        ;;
    *) echo "$0: ERROR: unexpected value from getopts: $flag" 1>&2
        echo 1>&2
        echo "$USAGE" 1>&2
        exit 3
        ;;
  esac
done
#
# remove the options
#
shift $(( OPTIND - 1 ));
#
# verify arg count
#
if [[ $# -ge 2 ]]; then
    echo "$0: ERROR: expected o or 1 args, found: $#" 1>&2
    echo "$USAGE" 1>&2
    exit 3
fi


# determine filed number
#
if [[ "$#" -eq 1 ]]; then
    col="$1";
elif [[ "$#" -eq 0 ]]; then
    col=1;
fi


# add that field
#
awk 'NF >= '"$col"' && $'"$col"' ~ /[0-9 	.+-]*/ {x += $'"$col"'} END {print x}' -


# All Done!!! -- Jessica Noll, Age 2
#
exit 0
